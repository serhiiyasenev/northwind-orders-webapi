name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      coverage-generated: ${{ steps.check-coverage.outputs.coverage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test with Coverage
        run: |
          dotnet test \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      - name: Generate Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'Badges;HtmlInline_AzurePipelines'
          assemblyfilters: '-*.Tests'

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coveragereport/badge_linecoverage.svg

      - name: Upload full HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./coveragereport

      - name: Check if coverage badge was generated
        id: check-coverage
        run: |
          if [ -f coveragereport/badge_linecoverage.svg ]; then
            echo "coverage=true" >> $GITHUB_OUTPUT
          else
            echo "coverage=false" >> $GITHUB_OUTPUT
          fi

  badge-deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && needs.build-and-test.outputs.coverage-generated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download badge artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-badge

      - name: Move badge to root
        run: mv badge_linecoverage.svg badge.svg

      - name: Commit and push badge
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add badge.svg
          git diff --cached --quiet || git commit -m "ðŸ“ˆ Update coverage badge"
          git push origin main

  report-deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && needs.build-and-test.outputs.coverage-generated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Download full report artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./coveragereport

      - name: Show contents of Coverage Report
        run: ls -R ./coveragereport

      - name: Deploy coverage report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coveragereport
          publish_branch: gh-pages
          destination_dir: ./coveragereport
          keep_files: true
